# SPDX-FileCopyrightText: Contributors to the Power Grid Model project <powergridmodel@lfenergy.org>
#
# SPDX-License-Identifier: MPL-2.0

name: Build and Test C++ and Python

# Controls when the workflow will run
on:
  # run pipeline from another workflow
  workflow_call:
    inputs:
      create_release:
        type: boolean
        description: Create a (pre-)release when CI passes
        required: true
  # run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      create_release:
        type: boolean
        description: Create a (pre-)release when CI passes
        default: false
        required: true

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-main
  cancel-in-progress: true

jobs:
  build-and-test-conda:
    name: Build and test in Conda

    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        os: ["ubuntu", "windows"] # We do not test conda for MacOS
        include:
          - os: ubuntu
            shell: bash -el {0}
          - os: windows
            shell: powershell
    env:
      POWER_GRID_MODEL_NO_BINARY_BUILD: 1

    defaults:
      run:
        shell: ${{ matrix.shell }}
    steps:
      - uses: actions/checkout@v5

      - uses: conda-incubator/setup-miniconda@v3
        with:
          miniforge-version: latest  # use miniforge instead of miniconda
          activate-environment: conda-pgm-env
          environment-file: .github/conda_pgm_env.yml
          auto-activate-base: false
          channels: conda-forge
          conda-remove-defaults: "true"
      
      - run: conda info
      - run: conda list
      - run: conda config --show-sources
      - run: conda env export
      - run: conda list --explicit

      - uses: ./.github/actions/enable-msvc
        if: runner.os == 'Windows'

      - name: Build and install cmake target for Windows
        if: matrix.os == 'windows'
        run: |          
          cmake -GNinja -DCMAKE_BUILD_TYPE=Release -B build/ -S .
